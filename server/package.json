{
  "name": "is",
  "version": "1.0.0",
  "description": "",
  "main": "src/server.js",
  "engines": {
    "node": "12.16.2",
    "npm": "6.14.8"
  },
  "scripts": {
    "heroku-prebuild": "npm install --dev",
    "build": "babel -d ./build ./src",
    "prestart": "npm run build",
    "server": "nodemon --exec babel-node src/server.js",
    "test": "cross-env NODE_ENV=test nodemon --exec babel-node src/server.js",
    "prod-test": "set NODE_ENV=production&& nodemon --exec babel-node src/server.js",
    "start": "NODE_ENV=production&& npm run build&& node ./build/server.js",
    "sequelize:app:migrate:test": "set NODE_ENV=test&& sequelize --options-path ./.sequelize-app --env app db:migrate",
    "sequelize:app:migrate:undo:test": "set NODE_ENV=test&& sequelize --options-path ./.sequelize-app --env app db:migrate:undo",
    "sequelize:app:seed:all:test": "set NODE_ENV=test&& sequelize --options-path ./.sequelize-app --env app db:seed:all",
    "sequelize:stakeholders:migrate:test": "set NODE_ENV=test&& sequelize --options-path ./.sequelize-stakeholders --env stakeholders db:migrate",
    "sequelize:stakeholders:migrate:undo:test": "set NODE_ENV=test&& sequelize --options-path ./.sequelize-stakeholders --env stakeholders db:migrate:undo",
    "sequelize:stakeholders:seed:all:test": "set NODE_ENV=test&& sequelize --options-path ./.sequelize-stakeholders --env stakeholders db:seed:all",
    "sequelize:app:migrate:production": "set NODE_ENV=production&& sequelize --options-path ./.sequelize-app --env app db:migrate",
    "sequelize:app:migrate:undo:production": "set NODE_ENV=production&& sequelize --options-path ./.sequelize-app --env app db:migrate:undo",
    "sequelize:app:seed:all:production": "set NODE_ENV=production&& sequelize --options-path ./.sequelize-app --env app db:seed:all",
    "sequelize:stakeholders:migrate:production": "set NODE_ENV=production&& sequelize --options-path ./.sequelize-stakeholders --env stakeholders db:migrate",
    "sequelize:stakeholders:migrate:undo:production": "set NODE_ENV=production&& sequelize --options-path ./.sequelize-stakeholders --env stakeholders db:migrate:undo",
    "sequelize:stakeholders:seed:all:production": "set NODE_ENV=production&& sequelize --options-path ./.sequelize-stakeholders --env stakeholders db:seed:all"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "bcryptjs": "^2.4.3",
    "body-parser": "^1.19.0",
    "concurrently": "^5.3.0",
    "cookie-parser": "^1.4.5",
    "cors": "^2.8.5",
    "crypto-random-string": "^3.3.0",
    "dotenv": "^8.2.0",
    "express": "^4.17.1",
    "express-validator": "^6.8.1",
    "file-type": "^16.1.0",
    "filesize": "^6.1.0",
    "fs-extra": "^9.0.1",
    "generate-password": "^1.5.1",
    "jsonwebtoken": "^8.5.1",
    "multer": "^1.4.2",
    "nodemailer": "^6.4.14",
    "normalize-path": "^3.0.0",
    "pdf-creator-node": "^1.4.2",
    "pg": "7.12.0",
    "pg-hstore": "^2.3.3",
    "sequelize": "^6.3.5",
    "sequelize-cli": "^6.2.0",
    "socket.io": "^2.3.0",
    "trim-request": "^1.0.6",
    "useragent": "^2.3.0"
  },
  "devDependencies": {
    "@babel/cli": "^7.12.10",
    "@babel/core": "^7.11.6",
    "@babel/node": "^7.10.5",
    "@babel/plugin-transform-runtime": "^7.12.1",
    "@babel/preset-env": "^7.11.5",
    "cross-env": "^7.0.3",
    "nodemon": "^2.0.4"
  }
}
